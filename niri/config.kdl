input {
    keyboard {
        xkb {
            layout "us"
        }
    }

    touchpad {
    	dwt
        tap
        natural-scroll
	click-method "clickfinger"
    }
    mod-key "Super"
    mod-key-nested "Super"
}

output "eDP-1" {
    scale 1.5
    transform "normal"
    position x=0 y=1080
    focus-at-startup
    variable-refresh-rate
}

layout {
    gaps 16
    center-focused-column "on-overflow"
    always-center-single-column
    empty-workspace-above-first
    background-color "#674846"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
	proportion 1.0
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.66667; }
    focus-ring {
        width 3
        active-color "#f9a602"
        inactive-color "#ffffff00"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        off
    }

    tab-indicator {
        width 8
        gap 8
        length total-proportion=1.0
        position "top"
        place-within-column
    }

    // Struts shrink the area occupied by windows, similarly to layer-shell panels.
    // You can think of them as a kind of outer gaps. They are set in logical pixels.
    // Left and right struts will cause the next window to the side to always be visible.
    // Top and bottom struts will simply add outer gaps in addition to the area occupied by
    // layer-shell panels and regular gaps.
    struts {
        // left 64
        // right 64
        // top 64
        // bottom 64
    }
}

spawn-at-startup "hypridle"
spawn-at-startup "waybar"
spawn-at-startup "/usr/libexec/polkit-mate-authentication-agent-1"
spawn-at-startup "swww-daemon" "--format" "xrgb"
spawn-at-startup "/usr/bin/foot" "-s"
spawn-at-startup "gentoo-pipewire-launcher" "restart"

hotkey-overlay {
    // Uncomment this line to disable the "Important Hotkeys" pop-up at startup.
    skip-at-startup
    hide-not-bound
}

overview {
    backdrop-color "#674846"
}

prefer-no-csd
screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
    // Uncomment to turn off all animations.
    // off

    // Slow down all animations by this factor. Values below 1 speed them up instead.
    // slowdown 3.0
}

cursor {
    // TODO
}

gestures {
    dnd-edge-view-scroll {
        trigger-width 30
        delay-ms 100
        max-speed 1500
    }

    dnd-edge-workspace-switch {
        trigger-height 50
        delay-ms 100
        max-speed 1500
    }

    hot-corners {
        // off
    }
}

window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

// Open the Firefox picture-in-picture player as floating by default.
window-rule {
    match app-id=r#"firefox"# title="^Picture-in-Picture$"
    open-floating true
}

// Have firefox at full size
window-rule {
    match app-id=r#"^firefox"#
    default-column-width {
        proportion 1.0;
    }
}

// Have Discord and Bitwarden at 50% width
window-rule {
    match app-id=r#"^Bitwarden$"#
    match app-id=r#"^discord$"#
    default-column-width {
        proportion 0.5;
    }
}

// Make all virt-manager a tabbed layout
window-rule {
    match app-id=r#"^virt-manager$"#
    default-column-display "tabbed"
}

// Example: block out two password managers from screen capture.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id=r#"^Bitwarden$"#

    block-out-from "screen-capture"

    // Use this instead if you want them visible on third-party screenshot tools.
    // block-out-from "screencast"
}

// Enable rounded corners for all windows.
window-rule {
    geometry-corner-radius 15
    clip-to-geometry true
}

environment {
    WLR_DRM_DEVICES "/dev/dri/card0"
    XDG_SESSION_TYPE "wayland"
    MOZ_ENABLE_WAYLAND "1"
    MOZ_DBUS_REMOTE "1"
    ELECTRON_OZONE_PLATFORM_HINT "wayland"
}

binds {
    // shows a list of important hotkeys.
    Super+Shift+Slash { show-hotkey-overlay; }

    // Suggested binds for running programs: terminal, app launcher, screen locker.
    Super+Return hotkey-overlay-title="Open a Terminal: foot" { spawn "footclient"; }
    Super+Space hotkey-overlay-title="Run an Application: fuzzel" { spawn "fuzzel"; }
    Super+S hotkey-overlay-title="Lock the Screen: hyprlock" { spawn "hyprlock"; }
    Super+Shift+Q { spawn-sh "wlogout -p layer-shell -b 5"; }

    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    // Open/close the Overview: a zoomed-out view of workspaces and windows.
    // You can also move the mouse into the top-left hot corner,
    // or do a four-finger swipe up on a touchpad.
    Super+O repeat=false { toggle-overview; }
    Super+Q repeat=false { close-window; }

    Super+Left  { focus-column-left; }
    Super+Down  { focus-window-down; }
    Super+Up    { focus-window-up; }
    Super+Right { focus-column-right; }
    Super+H     { focus-column-left; }
    Super+J     { focus-window-down; }
    Super+K     { focus-window-up; }
    Super+L     { focus-column-right; }

    Super+Ctrl+Left  { move-column-left; }
    Super+Ctrl+Down  { move-window-down; }
    Super+Ctrl+Up    { move-window-up; }
    Super+Ctrl+Right { move-column-right; }
    Super+Ctrl+H     { move-column-left; }
    Super+Ctrl+J     { move-window-down; }
    Super+Ctrl+K     { move-window-up; }
    Super+Ctrl+L     { move-column-right; }

    // Alternative commands that move across workspaces when reaching
    // the first or last window in a column.
    // Mod+J     { focus-window-or-workspace-down; }
    // Mod+K     { focus-window-or-workspace-up; }
    // Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    // Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }

    Super+Home { focus-column-first; }
    Super+End  { focus-column-last; }
    Super+Ctrl+Home { move-column-to-first; }
    Super+Ctrl+End  { move-column-to-last; }

    Super+Shift+Left  { focus-monitor-left; }
    Super+Shift+Down  { focus-monitor-down; }
    Super+Shift+Up    { focus-monitor-up; }
    Super+Shift+Right { focus-monitor-right; }
    Super+Shift+H     { focus-monitor-left; }
    Super+Shift+J     { focus-monitor-down; }
    Super+Shift+K     { focus-monitor-up; }
    Super+Shift+L     { focus-monitor-right; }

    Super+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Super+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Super+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Super+Shift+Ctrl+Right { move-column-to-monitor-right; }
    Super+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Super+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Super+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Super+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // Alternatively, there are commands to move just a single window:
    // Mod+Shift+Ctrl+Left  { move-window-to-monitor-left; }
    // ...

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }
    // ...

    Super+Page_Down      { focus-workspace-down; }
    Super+Page_Up        { focus-workspace-up; }
    Super+U              { focus-workspace-down; }
    Super+I              { focus-workspace-up; }
    Super+Ctrl+Page_Down { move-column-to-workspace-down; }
    Super+Ctrl+Page_Up   { move-column-to-workspace-up; }
    Super+Ctrl+U         { move-column-to-workspace-down; }
    Super+Ctrl+I         { move-column-to-workspace-up; }

    // Alternatively, there are commands to move just a single window:
    // Super+Ctrl+Page_Down { move-window-to-workspace-down; }
    // ...

    Super+Shift+Page_Down { move-workspace-down; }
    Super+Shift+Page_Up   { move-workspace-up; }
    Super+Shift+U         { move-workspace-down; }
    Super+Shift+I         { move-workspace-up; }

    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Super+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Super+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Super+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Super+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Super+WheelScrollRight      { focus-column-right; }
    Super+WheelScrollLeft       { focus-column-left; }
    Super+Ctrl+WheelScrollRight { move-column-right; }
    Super+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Super+Shift+WheelScrollDown      { focus-column-right; }
    Super+Shift+WheelScrollUp        { focus-column-left; }
    Super+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Super+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Super+TouchpadScrollDown { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02+"; }
    // Super+TouchpadScrollUp   { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Super+1 { focus-workspace 1; }
    Super+2 { focus-workspace 2; }
    Super+3 { focus-workspace 3; }
    Super+4 { focus-workspace 4; }
    Super+5 { focus-workspace 5; }
    Super+6 { focus-workspace 6; }
    Super+7 { focus-workspace 7; }
    Super+8 { focus-workspace 8; }
    Super+9 { focus-workspace 9; }
    Super+Ctrl+1 { move-column-to-workspace 1; }
    Super+Ctrl+2 { move-column-to-workspace 2; }
    Super+Ctrl+3 { move-column-to-workspace 3; }
    Super+Ctrl+4 { move-column-to-workspace 4; }
    Super+Ctrl+5 { move-column-to-workspace 5; }
    Super+Ctrl+6 { move-column-to-workspace 6; }
    Super+Ctrl+7 { move-column-to-workspace 7; }
    Super+Ctrl+8 { move-column-to-workspace 8; }
    Super+Ctrl+9 { move-column-to-workspace 9; }

    // Alternatively, there are commands to move just a single window:
    // Super+Ctrl+1 { move-window-to-workspace 1; }

    // Switches focus between the current and the previous workspace.
    // Super+Tab { focus-workspace-previous; }

    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Super+BracketLeft  { consume-or-expel-window-left; }
    Super+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    Super+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    Super+Period { expel-window-from-column; }

    Super+R { switch-preset-column-width; }
    // Cycling through the presets in reverse order is also possible.
    // Super+R { switch-preset-column-width-back; }
    Super+Shift+R { switch-preset-window-height; }
    Super+Ctrl+R { reset-window-height; }
    Super+F { maximize-column; }
    Super+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Super+Ctrl+F { expand-column-to-available-width; }

    Super+C { center-column; }

    // Center all fully visible columns on screen.
    Super+Ctrl+C { center-visible-columns; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Super+Minus { set-column-width "-10%"; }
    Super+Equal { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Super+Shift+Minus { set-window-height "-10%"; }
    Super+Shift+Equal { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Super+V       { toggle-window-floating; }
    Super+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Super+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Super+Space       { switch-layout "next"; }
    // Super+Shift+Space { switch-layout "prev"; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }
    Super+Shift+S { spawn "hyprshot" "-m" "region" "--clipboard-only"; }

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Super+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Super+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Super+Shift+P { power-off-monitors; }
}
